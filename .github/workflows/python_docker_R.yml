# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: python_docker_R

on:
  push:
    branches: [ "main" ]
  # pull_request:
  #   branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v4

    # 需要依赖docker环境, R, Python 3.10
    # - name: Set up Docker
    #   run: |
    #     # workflow环境自带docker
    #     # docker pull dynverse/ti_paga:v0.9.9.05
    #     docker images
    
    # # 安装的R 4.1.2 与rpy2适配总是有点问题, 用默认R4.4.2吧
    # - name: Set up R 4.4.2
    #   uses: r-lib/actions/setup-r@v2
    #   with:
    #     r-version: "4.4.2"
    
    # # 解析DESCRIPTION文件, 下载R包， 这步构建的时间很长
    # - name: Install R dependencies
    #   uses: r-lib/actions/setup-r-dependencies@v2

    # - name: Set up Python 3.10
    #   uses: actions/setup-python@v3
    #   with:
    #     python-version: "3.10"

    # # 检查Docker, R, Python的版本
    # - name: check Docker R Python version
    #   run: |
    #     docker --version
    #     R --version
    #     python --version

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    # 测试前项目路径添加到包路径下
    - name: Add project root to PYTHONPATH
      run: |
       PYTHONPATH="${GITHUB_WORKSPACE}:${PYTHONPATH}"

    - name: Test with pytest
      run: |
        pytest